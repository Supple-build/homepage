/* ==========================================================================
objects.retain
Creates a wrapper around a block of content, centers, adds padding and
retains it to your desired size.
/  ========================================================================== */

/**
 * Forward the variables to the parent stylesheet
 */
@forward './variables';

/**
 * Use the settings & tools in this sheet
 */
@use './variables';

/* --------------------------------------------------------------------------
Module
/  -------------------------------------------------------------------------- */

@layer objects {
	/**
	 * 1. With the default `box-sizing: border-box` the padding will be
	 *    substracted from the maximum inline-size. This is not what we want with
	 *    `retain`, therefore we set it to `content-box` so the content within
	 *    is always the same as the maximum inline size.
	 */
	:where(.o-retain) {
		--_s-o-retain-padding-inline: var(
			--o-retain-padding-inline,
			var(--s-space-base, 1.5rem)
		);
		--_s-o-retain-margin-inline: var(--o-retain-margin-inline, auto);

		--s-retain-margin-inline: auto;
		box-sizing: content-box; /* [1] */
		max-inline-size: var(--s-retain-max-inline-size, 80rem);
		padding-inline: var(
				--o-retain-padding-inline-start,
				var(--_s-o-retain-padding-inline)
			)
			var(--o-retain-padding-inline-end, var(--_s-o-retain-padding-inline));
		margin-inline: var(
				--o-retain-margin-inline-start,
				var(--_s-o-retain-margin-inline)
			)
			var(--o-retain-margin-inline-end, var(--_s-o-retain-margin-inline));
	}

	:where(.o-retain--flush) {
		--s-retain-padding-inline: 0;
	}
}
